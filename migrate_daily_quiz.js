const configManager = require('./utils/configManager');
const fs = require('fs');
const path = require('path');

console.log('üîÑ Migration de la configuration Daily Quiz');
console.log('===========================================\n');

async function migrateDailyQuizConfig() {
    try {
        const config = configManager.getConfig();
        let needsMigration = false;
        let changes = [];

        console.log('1. Analyse de la configuration actuelle...');
        
        // V√©rifier s'il y a une ancienne configuration √† migrer
        if (config.dailyQuizChannelId && !config.games?.dailyQuizChannel) {
            console.log('   üìã Ancienne configuration trouv√©e: dailyQuizChannelId');
            needsMigration = true;
            changes.push(`Migration de dailyQuizChannelId vers games.dailyQuizChannel`);
        }

        if (config.games?.dailyQuizChannelId && !config.games?.dailyQuizChannel) {
            console.log('   üìã Configuration interm√©diaire trouv√©e: games.dailyQuizChannelId');
            needsMigration = true;
            changes.push(`Migration de games.dailyQuizChannelId vers games.dailyQuizChannel`);
        }

        if (!needsMigration) {
            console.log('   ‚úÖ Aucune migration n√©cessaire');
            console.log('   üìä Configuration actuelle:');
            console.log(`      - gameChannel: ${config.games?.gameChannel || 'Non configur√©'}`);
            console.log(`      - dailyQuizChannel: ${config.games?.dailyQuizChannel || 'Non configur√©'}`);
            return;
        }

        console.log('\n2. Cr√©ation d\'une sauvegarde...');
        const backupPath = path.join(__dirname, `config_backup_daily_quiz_${Date.now()}.json`);
        fs.writeFileSync(backupPath, JSON.stringify(config, null, 2));
        console.log(`   üíæ Sauvegarde cr√©√©e: ${backupPath}`);

        console.log('\n3. Application de la migration...');
        
        // Pr√©parer la nouvelle configuration
        const newConfig = { ...config };
        if (!newConfig.games) newConfig.games = {};

        // Migrer depuis l'ancienne structure
        if (config.dailyQuizChannelId) {
            newConfig.games.dailyQuizChannel = config.dailyQuizChannelId;
            delete newConfig.dailyQuizChannelId;
            console.log(`   ‚úÖ Migr√© dailyQuizChannelId: ${config.dailyQuizChannelId}`);
        }

        // Migrer depuis la structure interm√©diaire
        if (config.games?.dailyQuizChannelId) {
            newConfig.games.dailyQuizChannel = config.games.dailyQuizChannelId;
            delete newConfig.games.dailyQuizChannelId;
            console.log(`   ‚úÖ Migr√© games.dailyQuizChannelId: ${config.games.dailyQuizChannelId}`);
        }

        // Appliquer la nouvelle configuration
        await configManager.updateConfig(newConfig);
        
        console.log('\n4. V√©rification de la migration...');
        const verificationConfig = configManager.getConfig();
        console.log('   üìä Nouvelle configuration:');
        console.log(`      - gameChannel: ${verificationConfig.games?.gameChannel || 'Non configur√©'}`);
        console.log(`      - dailyQuizChannel: ${verificationConfig.games?.dailyQuizChannel || 'Non configur√©'}`);
        
        console.log('\n‚úÖ Migration termin√©e avec succ√®s!');
        console.log('\nüìù Changements appliqu√©s:');
        changes.forEach(change => console.log(`   - ${change}`));
        
        console.log('\nüéØ R√©sultat:');
        console.log('   - Le Daily Quiz a maintenant son propre canal d√©di√©');
        console.log('   - Le canal des jeux g√©n√©raux reste s√©par√©');
        console.log('   - La compatibilit√© avec l\'ancienne configuration est maintenue');

    } catch (error) {
        console.error('\n‚ùå Erreur lors de la migration:', error);
        console.error('   La configuration n\'a pas √©t√© modifi√©e');
        throw error;
    }
}

// Ex√©cuter la migration
migrateDailyQuizConfig().catch(console.error);